// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "debian-openssl-3.0.x", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")  // Replace with your DB connection URL in `.env`
}

model User {
  id        Int       @id @default(autoincrement())
  firebaseUId String @unique
  email     String    @unique
  role      String 
  filter    UserFilter?
}

model UserFilter {
  id              Int      @id @default(autoincrement())
  userId          Int      @unique
  price_limit     Float?
  move_in_date    DateTime?
  num_baths Int[] //(0 | 1 | 2 | 3 | 4)[];
  num_beds Int[] //(0 | 1 | 2 | 3 | 4)[];
  num_parking Int[] //(0 | 1 | 2 | 3 | 4)[];
  furnished       Boolean?
  pets            Boolean?
  gender_preference String?
  user            User     @relation(fields: [userId], references: [id])
}


model Listing {
  id                Int                 @id @default(autoincrement())
  link              String              @unique
  hash              String              @unique
  title             String
  pub_date          DateTime
  isSent            Boolean             @default(false)
  
  listingParameters ListingParameters[]
}

model ListingParameters {
  id             Int      @id @default(autoincrement())
  price          Int
  availability   DateTime?
  num_beds       Int?
  num_baths      Int?      // Allow num_baths to be nullable
  parking        Int?
  furnished      Boolean?
  pets           Boolean?
  listingId      Int       @unique
  listing        Listing   @relation(fields: [listingId], references: [id])
}